!function(e){"use strict";var t=function(e){this.defined="undefined"!==typeof localStorage};t.prototype={constructor:t,get:function(e,t){return localStorage.getItem(e)?localStorage.getItem(e):"undefined"!==typeof t?t:null},has:function(e){return localStorage.getItem(e)?true:false},set:function(e,t,n){if("string"===typeof t){if(""===t){this.destroy(e)}else{localStorage.setItem(e,t)}}return"function"===typeof n?n():true},destroy:function(e,t){localStorage.removeItem(e);return"function"===typeof t?t():true},clean:function(e){for(var t=localStorage.length-1;t>=0;t--){if("undefined"===typeof Array.indexOf&&-1!==localStorage.key(t).indexOf("garlic:")){localStorage.removeItem(localStorage.key(t))}}return"function"===typeof e?e():true},clear:function(e){localStorage.clear();return"function"===typeof e?e():true}};var n=function(e,t,n){this.init("garlic",e,t,n)};n.prototype={constructor:n,init:function(t,n,r,i){this.type=t;this.$element=e(n);this.options=this.getOptions(i);this.storage=r;this.path=this.getPath();this.parentForm=this.$element.closest("form");this.retrieve();this.$element.on(this.options.events.join("."+this.type+" "),false,e.proxy(this.persist,this));if(this.options.destroy){this.$element.closest("form").on("submit reset",false,e.proxy(this.destroy,this))}this.$element.addClass("garlic-auto-save")},getOptions:function(t){t=e.extend({},e.fn[this.type].defaults,t,this.$element.data());return t},persist:function(){if(this.$element.is("input[type=checkbox]")){return this.storage.set(this.path,this.$element.attr("checked")?"checked":"unchecked")}this.storage.set(this.path,this.$element.val())},retrieve:function(){if(this.storage.has(this.path)){if(this.options.conflictManager.enabled&&this.detectConflict()){return this.conflictManager()}if(this.$element.is("input[type=radio], input[type=checkbox]")){if("checked"===this.storage.get(this.path)||this.storage.get(this.path)===this.$element.val()){return this.$element.attr("checked",true)}else if("unchecked"===this.storage.get(this.path)){this.$element.attr("checked",false)}return}this.$element.val(this.storage.get(this.path))}},detectConflict:function(){var t=this;if(this.$element.is("input[type=checkbox], input[type=radio]")){return false}if(this.$element.val()&&this.storage.get(this.path)!==this.$element.val()){if(this.$element.is("select")){var n=false;this.$element.find("option").each(function(){if(e(this).index()!==0&&e(this).attr("selected")&&e(this).val()!==t.storage.get(this.path)){n=true;return}});return n}return true}return false},conflictManager:function(){if("function"===typeof this.options.conflictManager.onConflictDetected&&!this.options.conflictManager.onConflictDetected(this.$element,this.storage.get(this.path))){return false}if(this.options.conflictManager.garlicPriority){this.$element.data("swap-data",this.$element.val());this.$element.data("swap-state","garlic");this.$element.val(this.storage.get(this.path))}else{this.$element.data("swap-data",this.storage.get(this.path));this.$element.data("swap-state","default")}this.swapHandler();this.$element.addClass("garlic-conflict-detected");this.$element.closest("input[type=submit]").attr("disabled",true)},swapHandler:function(){var t=e(this.options.conflictManager.template);this.$element.after(t.text(this.options.conflictManager.message));t.on("click",false,e.proxy(this.swap,this))},swap:function(){var t=this.$element.data("swap-data");this.$element.data("swap-state","garlic"===this.$element.data("swap-state")?"default":"garlic");this.$element.data("swap-data",this.$element.val());e(this.$element).val(t)},destroy:function(){this.storage.destroy(this.path)},remove:function(){this.remove();if(this.$element.is("input[type=radio], input[type=checkbox]")){e(this.$element).attr("checked",false);return}this.$element.val("")},getPath:function(){if(this.$element.length!=1){return false}var t="",n=this.$element.is("input[type=checkbox]"),r=this.$element;while(r.length){var i=r[0],s=i.nodeName;if(!s){break}s=s.toLowerCase();var o=r.parent(),u=o.children(s);if(!e(i).is("form, input, select, textarea")&&!n){r=o;continue}s+=e(i).attr("name")?"."+e(i).attr("name"):"";if(u.length>1&&!e(i).is("input[type=radio]")){s+=":eq("+u.index(i)+")"}t=s+(t?">"+t:"");if("form"==i.nodeName.toLowerCase()){break}r=o}return"garlic:"+document.domain+(this.options.domain?"*":window.location.pathname)+">"+t},getStorage:function(){return this.storage}};e.fn.garlic=function(r,i){function a(t){var i=e(t),u=i.data("garlic"),a=e.extend({},s,i.data());if("undefined"!==typeof a.storage&&!a.storage){return}if(!u){i.data("garlic",u=new n(t,o,a))}if("string"===typeof r&&"function"===typeof u[r]){return u[r]()}}var s=e.extend(true,{},e.fn.garlic.defaults,r,this.data()),o=new t,u=false;if(!o.defined){return false}this.each(function(){if(e(this).is("form")){e(this).find(s.inputs).each(function(){u=a(e(this))})}else if(e(this).is(s.inputs)){u=a(e(this))}});return"function"===typeof i?i():u};e.fn.garlic.Constructor=n;e.fn.garlic.defaults={destroy:true,inputs:"input, textarea, select",events:["DOMAttrModified","textInput","input","change","keypress","paste","focus"],domain:false,conflictManager:{enabled:true,garlicPriority:true,template:'<span class="garlic-swap"></span>',message:"This is your saved data. Click here to see default one",onConflictDetected:function(e,t){return true}}};e(window).on("load",function(){e('[data-persist="garlic"]').each(function(){e(this).garlic()})})}(window.jQuery||window.Zepto)